<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:assist="clr-namespace:WindowThemes.Wpf.ControlAssist"
    xmlns:control ="clr-namespace:WindowThemes.Wpf.Controls"
    xmlns:converts="clr-namespace:WindowThemes.Wpf.Converters"
    mc:Ignorable="d">
    <converts:ToHalfConverter x:Key="ToHalfConverter"></converts:ToHalfConverter>
    <converts:ScaleConverter x:Key="ScaleConverter"></converts:ScaleConverter>
    <converts:ToggleTranslateXConverter x:Key="ToggleTranslateXConverter"></converts:ToggleTranslateXConverter>
    <converts:ToggleHeightConverter x:Key="ToggleHeightConverter"></converts:ToggleHeightConverter>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF3399FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FF666666"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF3399FF"/>
    <Style x:Key="CheckBoxBase" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseHoverBackground" Value="{StaticResource OptionMark.MouseOver.Border}"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseDownBackground" Value="{StaticResource OptionMark.Pressed.Border}"/>
        <Setter Property="assist:IconElementAssist.FillColor" Value="{StaticResource OptionMark.Static.Glyph}"/>
        <Setter Property="assist:BorderElementAssist.CornerRadius" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="{Binding Path=(assist:BorderElementAssist.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{Binding Path=(assist:IconElementAssist.FillColor), RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="white"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseDownBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GeneralCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="Padding" Value="4,0,0,0"></Setter>
        <Setter Property="IsChecked" Value="False"></Setter>
        <Setter Property="Content" Value="CheckBox"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseHoverBackground" Value="{StaticResource OptionMark.MouseOver.Border}"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseDownBackground" Value="{StaticResource OptionMark.Pressed.Border}"/>
        <Setter Property="assist:IconElementAssist.FillColor" Value="{StaticResource OptionMark.Static.Glyph}"/>
        <Setter Property="assist:BorderElementAssist.CornerRadius" Value="5"/>
        <Setter Property="assist:BorderElementAssist.BorderWidth" Value="20"/>
        <Setter Property="assist:BorderElementAssist.BorderHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="bdrOuter"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding Path=(assist:BorderElementAssist.CornerRadius),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Width="{Binding Path=(assist:BorderElementAssist.BorderWidth),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Height="{Binding Path=(assist:BorderElementAssist.BorderHeight),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        >
                            <Path x:Name="pCheck"
                                          Width="16"
                                          Height="16"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Data="M2,9 L7.5,13.5 L 14.5,2.5"
                                          StrokeThickness="1.5"
                                          Stroke="{Binding Path=(assist:IconElementAssist.FillColor),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                          RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <ScaleTransform>
                                        <ScaleTransform.ScaleX>
                                            <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                <Binding Path="(assist:BorderElementAssist.BorderWidth)" RelativeSource="{RelativeSource Mode=TemplatedParent}"></Binding>
                                                <Binding  Path="(assist:BorderElementAssist.BorderHeight)" RelativeSource="{RelativeSource Mode=TemplatedParent}"></Binding>
                                            </MultiBinding>
                                        </ScaleTransform.ScaleX>
                                        <ScaleTransform.ScaleY>
                                            <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                <Binding Path="(assist:BorderElementAssist.BorderWidth)" RelativeSource="{RelativeSource Mode=TemplatedParent}"></Binding>
                                                <Binding  Path="(assist:BorderElementAssist.BorderHeight)" RelativeSource="{RelativeSource Mode=TemplatedParent}"></Binding>
                                            </MultiBinding>
                                        </ScaleTransform.ScaleY>
                                    </ScaleTransform>
                                </Path.RenderTransform>
                                <Path.OpacityMask>
                                    <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="1,1">
                                        <GradientStopCollection>
                                            <GradientStop Offset="0"
                                                                  Color="White"></GradientStop>
                                            <GradientStop x:Name="offset"
                                                                  Offset="0"
                                                                  Color="Transparent"></GradientStop>
                                        </GradientStopCollection>
                                    </LinearGradientBrush>
                                </Path.OpacityMask>
                            </Path>
                        </Border>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                         Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                        <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.2"></ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                        <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.1"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdrOuter" Property="Opacity" Value="1"></Setter>
                        </Trigger>-->
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"></Setter>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="bdrOuter" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="bdrOuter" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter Property="Stroke" TargetName="pCheck" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="bdrOuter" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="bdrOuter" Value="{StaticResource OptionMark.Disabled.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="CheckBoxStyle"
                     Value="General">
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <StackPanel Orientation="Horizontal">
                                <Border x:Name="bdrOuter"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0.7">
                                    <Path x:Name="pCheck"
                                          Width="16"
                                          Height="16"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Data="M2,9 L7.5,13.5 L 14.5,2.5"
                                          StrokeThickness="1.5"
                                          Stroke="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                          RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <ScaleTransform>
                                                <ScaleTransform.ScaleX>
                                                    <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                        <Binding Path="InnerWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        <Binding Path="InnerHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                    </MultiBinding>
                                                </ScaleTransform.ScaleX>
                                                <ScaleTransform.ScaleY>
                                                    <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                        <Binding Path="InnerWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        <Binding Path="InnerHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                    </MultiBinding>
                                                </ScaleTransform.ScaleY>
                                            </ScaleTransform>
                                        </Path.RenderTransform>
                                        <Path.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="1,1">
                                                <GradientStopCollection>
                                                    <GradientStop Offset="0"
                                                                  Color="White"></GradientStop>
                                                    <GradientStop x:Name="offset"
                                                                  Offset="0"
                                                                  Color="Transparent"></GradientStop>
                                                </GradientStopCollection>
                                            </LinearGradientBrush>
                                        </Path.OpacityMask>
                                    </Path>
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.2"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.1"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="bdrOuter"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            --><!--<Trigger Property="CheckBoxStyle"
                     Value="Classic">
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <StackPanel Orientation="Horizontal">
                                <Border x:Name="bdrOuter"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0.9">
                                    <Border x:Name="bdrInner"
                                            Margin="-0.5,0"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            Opacity="0"
                                            Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}">
                                        <Path x:Name="pCheck"
                                              Width="16"
                                              Height="16"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Data="M2,9 L7.5,13.5 L 14.5,2.5"
                                              StrokeThickness="1.5"
                                              Stroke="White"
                                              RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <ScaleTransform>
                                                    <ScaleTransform.ScaleX>
                                                        <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                            <Binding Path="InnerWidth"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                            <Binding Path="InnerHeight"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        </MultiBinding>
                                                    </ScaleTransform.ScaleX>
                                                    <ScaleTransform.ScaleY>
                                                        <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                            <Binding Path="InnerWidth"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                            <Binding Path="InnerHeight"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        </MultiBinding>
                                                    </ScaleTransform.ScaleY>
                                                </ScaleTransform>
                                            </Path.RenderTransform>
                                            <Path.OpacityMask>
                                                <LinearGradientBrush StartPoint="0,0"
                                                                     EndPoint="1,1">
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0"
                                                                      Color="White"></GradientStop>
                                                        <GradientStop x:Name="offset"
                                                                      Offset="0"
                                                                      Color="Transparent"></GradientStop>
                                                    </GradientStopCollection>
                                                </LinearGradientBrush>
                                            </Path.OpacityMask>
                                        </Path>
                                    </Border>
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrInner"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.2"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrInner"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.1"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="bdrOuter"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CheckBoxStyle"
                     Value="Switch">
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="CoverBrush"
                        Value="LightGray"></Setter>
                <Setter Property="InnerHeight"
                        Value="25"></Setter>
                <Setter Property="InnerWidth"
                        Value="35"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <StackPanel Orientation="Horizontal"
                                        Background="{TemplateBinding Background}">
                                <Grid Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                      Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=CheckBox}}">
                                    <Border x:Name="bdrOuter"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToHalfConverter}}">
                                    </Border>
                                    <Border x:Name="bdrInner"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="White"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToHalfConverter}}"
                                            RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <ScaleTransform x:Name="scale"
                                                            ScaleX="1"
                                                            ScaleY="1"></ScaleTransform>
                                        </Border.RenderTransform>
                                    </Border>
                                    <Border HorizontalAlignment="Right"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToHalfConverter}}"
                                            Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToggleHeightConverter}}"
                                            Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToggleHeightConverter}}"
                                            Background="White">
                                        <Border.Effect>
                                            <DropShadowEffect x:Name="effect"
                                                              Color="DimGray"
                                                              Opacity="0.4"
                                                              BlurRadius="3"
                                                              ShadowDepth="0.5"
                                                              Direction="215"></DropShadowEffect>
                                        </Border.Effect>
                                        <Border.RenderTransform>
                                            <TranslateTransform x:Name="translate">
                                                <TranslateTransform.X>
                                                    <MultiBinding Converter="{StaticResource ToggleTranslateXConverter}">
                                                        <Binding Path="InnerWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        <Binding Path="InnerHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                    </MultiBinding>
                                                </TranslateTransform.X>
                                            </TranslateTransform>
                                        </Border.RenderTransform>
                                    </Border>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleX"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleY"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Storyboard.TargetName="translate"
                                                                     Storyboard.TargetProperty="X"
                                                                     To="-1"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleX"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleY"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="translate"
                                                                 Storyboard.TargetProperty="X"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="BlurRadius"
                                                                      To="5"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                                    <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="ShadowDepth"
                                                                      To="1"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                                </Storyboard>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="BlurRadius"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                                <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="ShadowDepth"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CheckBoxStyle"
                     Value="Branch">
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderThickness"
                        Value="5,0,0,0"></Setter>
                <Setter Property="Padding"
                        Value="10,0,0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid>
                                <Grid>
                                    <Border x:Name="bdrCover"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            Opacity="0.2" />
                                    <Border x:Name="bdrInner"
                                            BorderBrush="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            Opacity="0.7">
                                        <Border.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientStopCollection>
                                                    <GradientStop Offset="0"
                                                                  Color="White"></GradientStop>
                                                    <GradientStop x:Name="offset"
                                                                  Offset="0"
                                                                  Color="Transparent"></GradientStop>
                                                </GradientStopCollection>
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>
                                    </Border>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.2"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.05"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.05"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.05"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CheckBoxStyle"
                     Value="Button">
                <Setter Property="CoverBrush"
                        Value="#EE666666"></Setter>
                <Setter Property="BorderThickness"
                        Value="0"></Setter>
                <Setter Property="Padding"
                        Value="10,0"></Setter>
                <Setter Property="HorizontalAlignment"
                        Value="Left"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="GrdMain"
                                  Height="{TemplateBinding Height}"
                                  Width="{TemplateBinding Width}"
                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Background="{TemplateBinding Background}"></Border>
                                <Border x:Name="bdrCover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0"></Border>
                                <Border x:Name="bdrCheckedCover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0"></Border>
                                <Label x:Name="lblContent"
                                       Content="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}">
                                </Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Setter TargetName="bdrCheckedCover"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Foreground"
                                            Value="White"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>--><!--
        </Style.Triggers>-->
    </Style>

    <Style x:Key="ClassicCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="Padding" Value="4,0,0,0"></Setter>
        <Setter Property="IsChecked" Value="False"></Setter>
        <Setter Property="Content" Value="CheckBox"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseHoverBackground" Value="{StaticResource OptionMark.MouseOver.Border}"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseDownBackground" Value="{StaticResource OptionMark.Pressed.Border}"/>
        <Setter Property="assist:IconElementAssist.FillColor" Value="{StaticResource OptionMark.Static.Glyph}"/>
        <Setter Property="assist:BorderElementAssist.CornerRadius" Value="5"/>
        <Setter Property="assist:BorderElementAssist.BorderWidth" Value="20"/>
        <Setter Property="assist:BorderElementAssist.BorderHeight" Value="20"/>
        <Setter Property="assist:BorderElementAssist.BorderColor" Value="{StaticResource OptionMark.MouseOver.Border}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="bdrOuter"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding Path=(assist:BorderElementAssist.CornerRadius),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Width="{Binding Path=(assist:BorderElementAssist.BorderWidth),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Height="{Binding Path=(assist:BorderElementAssist.BorderHeight),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        >
                            <Border x:Name="bdrInner"
                                            Margin="-0.5,0"
                                            CornerRadius="{Binding Path=(assist:BorderElementAssist.CornerRadius),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            Opacity="0"
                                            Background="{Binding Path=(assist:BorderElementAssist.BorderColor),RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <Path x:Name="pCheck"
                                              Width="16"
                                              Height="16"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Data="M2,9 L7.5,13.5 L 14.5,2.5"
                                              StrokeThickness="1.5"
                                              Stroke="{Binding Path=(assist:IconElementAssist.FillColor),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <ScaleTransform>
                                            <ScaleTransform.ScaleX>
                                                <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                    <Binding Path="(assist:BorderElementAssist.BorderWidth)" RelativeSource="{RelativeSource Mode=TemplatedParent}"></Binding>
                                                    <Binding  Path="(assist:BorderElementAssist.BorderHeight)" RelativeSource="{RelativeSource Mode=TemplatedParent}"></Binding>
                                                </MultiBinding>
                                            </ScaleTransform.ScaleX>
                                            <ScaleTransform.ScaleY>
                                                <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                    <Binding Path="(assist:BorderElementAssist.BorderWidth)" RelativeSource="{RelativeSource Mode=TemplatedParent}"></Binding>
                                                    <Binding  Path="(assist:BorderElementAssist.BorderHeight)" RelativeSource="{RelativeSource Mode=TemplatedParent}"></Binding>
                                                </MultiBinding>
                                            </ScaleTransform.ScaleY>
                                        </ScaleTransform>
                                    </Path.RenderTransform>
                                    <Path.OpacityMask>
                                        <LinearGradientBrush StartPoint="0,0"
                                                                     EndPoint="1,1">
                                            <GradientStopCollection>
                                                <GradientStop Offset="0"
                                                                      Color="White"></GradientStop>
                                                <GradientStop x:Name="offset"
                                                                      Offset="0"
                                                                      Color="Transparent"></GradientStop>
                                            </GradientStopCollection>
                                        </LinearGradientBrush>
                                    </Path.OpacityMask>
                                </Path>
                            </Border>
                        </Border>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                         Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="bdrInner"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                        <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.2"></ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="bdrInner"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                        <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                        <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.1"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdrOuter" Property="Opacity" Value="1"></Setter>
                            <!--<Setter Property="BorderBrush" TargetName="bdrOuter" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>-->
                            <Setter Property="Stroke" TargetName="pCheck" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="bdrOuter" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="bdrOuter" Value="{StaticResource OptionMark.Disabled.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SwitchCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="IsChecked" Value="False"></Setter>
        <Setter Property="Content" Value="CheckBox"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Glyph}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseHoverBackground" Value="{StaticResource OptionMark.MouseOver.Border}"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseDownBackground" Value="{StaticResource OptionMark.Pressed.Border}"/>
        <Setter Property="assist:IconElementAssist.FillColor" Value="{StaticResource OptionMark.Static.Glyph}"/>
        <Setter Property="assist:BorderElementAssist.BorderWidth" Value="40"/>
        <Setter Property="assist:BorderElementAssist.BorderHeight" Value="25"/>
        <Setter Property="assist:BorderElementAssist.BorderColor" Value="{StaticResource OptionMark.Static.Glyph}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal"
                                        Background="{TemplateBinding Background}">
                        <Grid  Width="{Binding Path=(assist:BorderElementAssist.BorderWidth),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               Height="{Binding Path=(assist:BorderElementAssist.BorderHeight),RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Border x:Name="bdrOuter"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{Binding Path=(assist:BorderElementAssist.BorderColor),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            CornerRadius="{Binding Path=(assist:BorderElementAssist.BorderHeight),RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ToHalfConverter}}">
                            </Border>
                            <Border x:Name="bdrInner"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="White"
                                            CornerRadius="{Binding Path=(assist:BorderElementAssist.BorderHeight),RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ToHalfConverter}}"
                                            RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="scale"
                                                            ScaleX="1"
                                                            ScaleY="1"></ScaleTransform>
                                </Border.RenderTransform>
                            </Border>
                            <Border HorizontalAlignment="Right"
                                               CornerRadius="{Binding Path=(assist:BorderElementAssist.BorderHeight),RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ToHalfConverter}}"
                                            Width="{Binding Path=(assist:BorderElementAssist.BorderHeight),RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ToggleHeightConverter}}"
                                            Height="{Binding Path=(assist:BorderElementAssist.BorderHeight),RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ToggleHeightConverter}}"
                                            Background="White">
                                <Border.Effect>
                                    <DropShadowEffect x:Name="effect"
                                                              Color="DimGray"
                                                              Opacity="0.4"
                                                              BlurRadius="3"
                                                              ShadowDepth="0.5"
                                                              Direction="215"></DropShadowEffect>
                                </Border.Effect>
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="translate">
                                        <TranslateTransform.X>
                                            <MultiBinding Converter="{StaticResource ToggleTranslateXConverter}">
                                                <Binding Path="(assist:BorderElementAssist.BorderWidth)" RelativeSource="{RelativeSource Mode=TemplatedParent}"></Binding>
                                                <Binding  Path="(assist:BorderElementAssist.BorderHeight)" RelativeSource="{RelativeSource Mode=TemplatedParent}"></Binding>
                                            </MultiBinding>
                                        </TranslateTransform.X>
                                    </TranslateTransform>
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                         Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleX"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"></CubicEase>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleY"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"></CubicEase>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetName="translate"
                                                                     Storyboard.TargetProperty="X"
                                                                     To="-1"
                                                                     Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"></CubicEase>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleX"
                                                                 Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"></CubicEase>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleY"
                                                                 Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"></CubicEase>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="translate"
                                                                 Storyboard.TargetProperty="X"
                                                                 Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"></CubicEase>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                         Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="BlurRadius"
                                                                      To="5"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                            <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="ShadowDepth"
                                                                      To="1"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="BlurRadius"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                        <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="ShadowDepth"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                         Value="False">
                            <Setter Property="Background" TargetName="bdrInner" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="bdrOuter" Value="{StaticResource OptionMark.Disabled.Border}"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>