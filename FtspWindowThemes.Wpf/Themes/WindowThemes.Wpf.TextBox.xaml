<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:assist="clr-namespace:WindowThemes.Wpf.ControlAssist"
    xmlns:control ="clr-namespace:WindowThemes.Wpf.Controls"
    xmlns:localconvert="clr-namespace:WindowThemes.Wpf.Converters"
    mc:Ignorable="d">

    <localconvert:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
    <localconvert:BooleanBackVisibilityConverter x:Key="BooleanBackVisibilityConverter"/>

    <ContextMenu x:Key="ThemenTextBoxContextMenu" Background="White" Style="{DynamicResource DefaultContextMenu}">
        <MenuItem Command="ApplicationCommands.Copy" Style="{DynamicResource FtspMenuItemStyle}"/>
        <MenuItem Command="ApplicationCommands.Cut" Style="{DynamicResource FtspMenuItemStyle}"/>
        <MenuItem Command="ApplicationCommands.Paste" Style="{DynamicResource FtspMenuItemStyle}"/>
    </ContextMenu>
    <!--{StaticResource GlobalFontMainColor}-->
    <Style x:Key="WateMarkStyle" TargetType="TextBlock">
        <!--<Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="14"/>-->
        <Setter Property="Foreground" Value="{Binding Path= (assist:TextBlockElementAssist.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="{Binding Path= (assist:TextBlockElementAssist.Margin),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
    </Style>

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF3399FF"/>
    <Style x:Key="TextBoxBaseStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="#FF666666"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="assist:BorderElementAssist.CornerRadius" Value="4"/>
        <Setter Property="assist:TextBlockElementAssist.Foreground" Value="{StaticResource GlobalFontMainColor}"/>
        <Setter Property="assist:TextBlockElementAssist.Margin" Value="12,0,0,0"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseHoverBackground" Value="{StaticResource TextBox.MouseOver.Border}"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseDownBackground" Value="{StaticResource TextBox.Focus.Border}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="{Binding Path=(assist:BorderElementAssist.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <Grid>
                            <ScrollViewer  x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <TextBlock x:Name="tipTextBlock"
                                       Foreground="{Binding Path=(assist:TextBlockElementAssist.Foreground), RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                       Margin="{Binding Path= (assist:TextBlockElementAssist.Margin),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                       Text="{Binding Path=(assist:BorderElementAssist.Text), RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" 
                                       Style="{StaticResource WateMarkStyle}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseDownBackground),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="false">
                            <Setter Property="Background" Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="{x:Null}"/>
                                <Condition Property="IsFocused" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="tipTextBlock" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="tipTextBlock" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContextMenu" Value="{StaticResource ThemenTextBoxContextMenu}"/>
    </Style>

    <Style x:Key="TitleTextBoxBaseStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="#FF666666"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="assist:BorderElementAssist.CornerRadius" Value="4"/>
        <Setter Property="assist:TextBlockElementAssist.Foreground" Value="{StaticResource GlobalFontMainColor}"/>
        <Setter Property="assist:TextBlockElementAssist.Margin" Value="12,0,0,0"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseHoverBackground" Value="{StaticResource TextBox.MouseOver.Border}"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseDownBackground" Value="{StaticResource TextBox.Focus.Border}"/>
        <Setter Property="assist:TitleElementAssist.Foreground" Value="Black"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <DockPanel LastChildFill="True">
                        <Border DockPanel.Dock="{Binding  Path=(assist:TitleElementAssist.TitlePlacement), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Label x:Name="title"  HorizontalAlignment="Left" 
                                   Margin="{Binding Path=(assist:TitleElementAssist.Margin),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   Foreground="{Binding Path=(assist:TitleElementAssist.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   Content="{Binding Path=(assist:TitleElementAssist.Title),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   />
                        </Border>
                        <Border x:Name="border" DockPanel.Dock="{Binding  Path=(assist:TitleElementAssist.TitlePlacement), RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="{Binding Path=(assist:BorderElementAssist.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Grid>
                                <ScrollViewer  x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                <TextBlock x:Name="tipTextBlock"
                                       Foreground="{Binding Path=(assist:TextBlockElementAssist.Foreground), RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                       Margin="{Binding Path= (assist:TextBlockElementAssist.Margin),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                       Text="{Binding Path=(assist:BorderElementAssist.Text), RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" 
                                       Style="{StaticResource WateMarkStyle}"/>
                            </Grid>
                        </Border>
                    </DockPanel>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=title,Path=Content}" Value="">
                            <Setter Property="Visibility" TargetName="title" Value="Collapsed"/>
                        </DataTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseDownBackground),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="false">
                            <Setter Property="Background" Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="{x:Null}"/>
                                <Condition Property="IsFocused" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="tipTextBlock" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="tipTextBlock" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContextMenu" Value="{StaticResource ThemenTextBoxContextMenu}"/>
    </Style>


    <Geometry  x:Key="CommonEyeOpenGeometry">M15.894,5.525C14.154,1.85,11.525,0,8,0S1.846,1.85.106,5.527a1.113,1.113,0,0,0,0,.948C1.846,10.15,4.475,12,8,12s6.154-1.85,7.894-5.527a1.113,1.113,0,0,0,0-.948ZM8,10.675C5.04,10.675,2.873,9.169,1.345,6,2.873,2.831,5.04,1.325,8,1.325S13.127,2.831,14.655,6C13.129,9.169,10.962,10.675,8,10.675ZM7.927,2.761A3.239,3.239,0,1,0,11.156,6,3.234,3.234,0,0,0,7.927,2.761Zm0,5.3A2.061,2.061,0,1,1,9.982,6,2.057,2.057,0,0,1,7.927,8.061Z</Geometry>
    <Geometry  x:Key="CommonEyeCloseGeometry">M186.893,276.081a11.139,11.139,0,0,0-2.3-3.291l-.933.924a9.709,9.709,0,0,1,2,2.835c-1.526,3.128-3.694,4.613-6.655,4.613a7.183,7.183,0,0,1-2.457-.406l-1.011,1a8.24,8.24,0,0,0,3.468.713q5.29,0,7.894-5.454a1.086,1.086,0,0,0,0-.935Zm-1.165-5.824-.783-.775a.148.148,0,0,0-.207,0h0l-2.006,1.985a8.155,8.155,0,0,0-3.731-.839q-5.29,0-7.894,5.456a1.086,1.086,0,0,0,0,.935,10.9,10.9,0,0,0,2.5,3.477l-1.941,1.921a.143.143,0,0,0,0,.205h0l.783.773a.148.148,0,0,0,.208,0h0l13.068-12.933a.145.145,0,0,0,0-.206Zm-13.384,6.292c1.529-3.127,3.7-4.613,6.656-4.613a7,7,0,0,1,2.736.516l-1.29,1.276a3.246,3.246,0,0,0-4.369,1.314,3.165,3.165,0,0,0,0,3.011l-1.531,1.516A9.442,9.442,0,0,1,172.344,276.549Zm4.527,0a2.046,2.046,0,0,1,2.055-2.035,2.09,2.09,0,0,1,.628.1l-2.585,2.558a2.016,2.016,0,0,1-.1-.621Zm2.056,2.131c-.064,0-.126,0-.188-.008l-.969.969a3.231,3.231,0,0,0,4.172-4.173l-.969.969c.006.062.009.125.009.188A2.055,2.055,0,0,1,178.927,278.68Z</Geometry>
    <Geometry  x:Key="CommonCopyGeometry">M1956.624,3058a.627.627,0,0,1-.625-.625v-10.75a.627.627,0,0,1,.625-.625H1960v-1.312a.69.69,0,0,1,.687-.688h8.626a.69.69,0,0,1,.688.688v10.625a.689.689,0,0,1-.688.687H1967v1.376a.627.627,0,0,1-.625.625Zm.292-10.843v9.687a.239.239,0,0,0,.239.24h8.687a.24.24,0,0,0,.24-.24l.088-6.844h-2.687a.447.447,0,0,1-.469-.484v-2.6h-5.859A.239.239,0,0,0,1956.917,3047.157Zm12.075,7.761v-9.645a.265.265,0,0,0-.265-.265H1961V3046h3.148l2.852,2.777v6.141Z</Geometry>
    <Style x:Key="ShowEyeToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="assist:IconElementAssist.FillColor" Value="#666666"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseHoverBackground" Value="{DynamicResource GlobalButtonMouseOverColor}"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseDownBackground" Value="{DynamicResource GlobalButtonPressedColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="grid" Background="Transparent">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" TextBlock.Foreground="{TemplateBinding Foreground}"  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                        <Grid Width="20" Height="15" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <!--Fill="{Binding Path=(assist:IconElementAssist.FillColor), RelativeSource={RelativeSource TemplatedParent}}"-->
                            <Path x:Name="icon" UseLayoutRounding="True" SnapsToDevicePixels="True" Stretch="Uniform" Fill="{Binding Path=(assist:IconElementAssist.FillColor), RelativeSource={RelativeSource TemplatedParent}}"  Data="{Binding RelativeSource={RelativeSource TemplatedParent},Path= (assist:IconElementAssist.Geometry)}"/>
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Stroke" TargetName="icon"
                                    Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                    
                                    />-->
                            <Setter Property="Fill" TargetName="icon"
                                       Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                    
                                    />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <!--<Setter Property="Stroke" TargetName="icon"
                                    Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseDownBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                    
                                    />-->
                            <Setter Property="Fill" TargetName="icon"
                                       Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseDownBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                    
                                    />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                         Value="True">
                            <Setter Property="assist:IconElementAssist.Geometry" Value="{DynamicResource CommonEyeOpenGeometry}"/>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                         Value="False">
                            <Setter Property="assist:IconElementAssist.Geometry" Value="{DynamicResource CommonEyeCloseGeometry}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CommonTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
        <Setter Property="Foreground" Value="#FF999999"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="assist:BorderElementAssist.CornerRadius" Value="4"/>
        <Setter Property="assist:TextBlockElementAssist.Foreground" Value="#FF999999"/>
        <Setter Property="assist:TextBlockElementAssist.Margin" Value="12,0,0,0"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseHoverBackground" Value="{StaticResource TextBox.MouseOver.Border}"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseDownBackground" Value="{StaticResource TextBox.Focus.Border}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="{Binding Path=(assist:BorderElementAssist.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <Grid>
                            <ScrollViewer  x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <TextBlock x:Name="tipTextBlock"
                                       Foreground="{Binding Path=(assist:TextBlockElementAssist.Foreground), RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                       Margin="{Binding Path= (assist:TextBlockElementAssist.Margin),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                       Text="{Binding Path=(assist:BorderElementAssist.Text), RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" 
                                       Style="{StaticResource WateMarkStyle}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseDownBackground),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="false">
                            <Setter Property="Background" Value="{x:Null}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=tipTextBlock,Path=Visibility}" Value="Collapsed">
                            <Setter Property="Foreground" Value="#FF222222"/>
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="{x:Null}"/>
                                <Condition Property="IsFocused" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="tipTextBlock" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="tipTextBlock" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContextMenu" Value="{StaticResource ThemenTextBoxContextMenu}"/>
    </Style>

    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
        <Setter Property="Foreground" Value="#FF222222"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseHoverBackground" Value="{StaticResource TextBox.MouseOver.Border}"/>
        <Setter Property="assist:BackgroundSwitchElementAssist.MouseDownBackground" Value="{StaticResource TextBox.Focus.Border}"/>
        <Setter Property="assist:BorderElementAssist.CornerRadius" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" CornerRadius="{Binding Path=(assist:BorderElementAssist.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseDownBackground),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="false">
                            <Setter Property="Background" Value="{x:Null}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type control:CommonPasswordBox}">
        <Style.Setters>
            <Setter Property="Padding" Value="0,0,10,0"/>
            <Setter Property="assist:BorderElementAssist.CornerRadius" Value="4"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="BorderBrush"  Value="Gray"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ShowPassword" Value="True"/>
            <Setter Property="assist:BackgroundSwitchElementAssist.MouseHoverBackground" Value="{DynamicResource GlobalButtonMouseOverColor}"/>
            <Setter Property="assist:BackgroundSwitchElementAssist.MouseDownBackground" Value="{DynamicResource GlobalButtonPressedColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type control:CommonPasswordBox}">
                        <Border x:Name="border" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(assist:BorderElementAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox IsReadOnly="{TemplateBinding IsReadOnly}" Background="Transparent" Margin="0" BorderThickness="0" Foreground="{TemplateBinding Foreground}" Visibility="{Binding ShowPassword,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource BooleanVisibilityConverter},Mode=OneWay}" x:Name="PART_TextBox" Padding="{TemplateBinding Padding}"  HorizontalAlignment="Stretch" Grid.Column="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Grid.Row="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <PasswordBox Margin="0" Style="{StaticResource PasswordBoxStyle}" BorderThickness="0" Background="Transparent" Foreground="{TemplateBinding Foreground}" Visibility="{Binding ShowPassword,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource BooleanBackVisibilityConverter},Mode=OneWay}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Padding="{TemplateBinding Padding}" Grid.Column="0" Grid.Row="0" x:Name="PART_PasswordBox" PasswordChar="{TemplateBinding PasswordChar}"/>
                                <ToggleButton Grid.Row="0" Grid.Column="1" IsChecked="{Binding ShowPassword,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" Background="Transparent" Height="25" Width="25" Style="{StaticResource ShowEyeToggleButtonStyle}" Visibility="Collapsed" Padding="2,7,7,7" x:Name="ButtonEye" Foreground="{TemplateBinding BorderBrush}" Focusable="False" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                <Button x:Name="PART_CopyButton" Visibility="Collapsed" Grid.Row="0" Grid.Column="2" Margin="0 0 10 0" Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Right" 
                        Style="{DynamicResource IconButtonStyle}"
                            assist:IconElementAssist.Geometry="{DynamicResource CommonCopyGeometry}"
                            assist:IconElementAssist.Height="16"  
                            assist:IconElementAssist.Width="16"
                            assist:BorderElementAssist.CornerRadius="0" 
                            assist:IconElementAssist.IconMargin="0,0,0,0" 
                            assist:IconElementAssist.FillColor="#666666" 
                            assist:BackgroundSwitchElementAssist.MouseHoverBackground="Transparent"
                            assist:BackgroundSwitchElementAssist.MouseDownBackground="Transparent"
                            assist:IconElementAssist.MouseHoverForeground="{DynamicResource GlobalButtonMouseOverColor}"
                            assist:IconElementAssist.MouseDownForeground="{DynamicResource GlobalButtonPressedColor}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseHoverBackground),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(assist:BackgroundSwitchElementAssist.MouseDownBackground),RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="ShowEyeButton" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="ButtonEye" />
                            </Trigger>
                            <Trigger Property="ShowCopyButton" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="PART_CopyButton" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
</ResourceDictionary>